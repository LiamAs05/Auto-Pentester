const express = require('express');
const app = express();
const sqlite3 = require("sqlite3");
const { spawn } = require( 'child_process' );
let ejs = require('ejs')
const fs = require('fs');

app.set('views', __dirname + '\\views')
app.engine('html',  ejs.renderFile);

app.set('view engine', 'ejs');

function do_ci(cmd, callback) {
    let result = '';
    const command = spawn( 'cmd', [ '/c', cmd ] );
    command.stdout.on( 'data', function(data) {
         result += data.toString();
    })
    command.on('close', function(code) {
        return callback(result);
    });
}

const db = new sqlite3.Database(__dirname + '\\sqlite3\\db.sqlite');

app.use(express.urlencoded({
  extended: false
}));

app.get(['/index.html', '/'], (req, res) => {
    res.render('index.html');
})

app.get('/xss', (req, res) => {
    fs.readFile(__dirname + '/views/xss.html', 'utf8', (err, data) => {
      if (err) {
        console.error(err);
        return;
      }
      res.send(data + '\n' + req.query.toEcho);
    });
});

app.post('/xss', (req, res) => {
     fs.readFile(__dirname + '/views/xss.html', 'utf8', (err, data) => {
      if (err) {
        console.error(err);
        return;
      }
      res.send(data + '\n' + req.query.toEcho);
    });
});

app.get('/ci', (req, res) => {
    do_ci(req.query.cmd, function(result) { res.render('ci.ejs', {ci: result}); });
});

app.post('/ci', (req, res) => {
    do_ci(req.body.cmd, function(result) { res.render('ci.ejs', {ci: result}); });
});

app.get('/login', (req, res) => {
    res.render('login.ejs', { newHtml: `` });
});

app.post('/login', (req, res) => {
    const username = req.body.username;
    const password = req.body.password;
    const query = `SELECT *
                   FROM users
                   WHERE Username = '${username}'
                     AND Password = '${password}';`;

    if (password.length < 6) {
        res.render('login.ejs', {newHtml: `Password length must be at least 6`});
        return;
    }

    db.all(query, [], (err, rows) => {
        if (err) {
            throw err;
        }
        else if (rows.length === 0) {
            res.render('login.ejs', {newHtml: `Incorrect username or password`});
        }
        else {
            res.render('login.ejs', {newHtml: `Logged in as ${rows[0].Username}`});
        }
    });
});

app.listen(3000, () => {
    console.log('Server listening on port 3000');
});
