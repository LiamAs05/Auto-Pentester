#! /usr/bin/python3

import unittest

import requests
import threading
import os

from src.plugins_manager import PluginManager
from src.classificator.classificator import Classificator, PageLevel
from src.analyzer.analyzer import Analyzer
from src.analyzer.page import Page


def get_page(url) -> Page:
    res = requests.get(url)
    elements = PluginManager.get_plugins()
    pages = set()
    route_to_parse = dict()
    blacklist = set()

    l1 = threading.Lock()
    l2 = threading.Lock()
    auth = ('user', 'pass')
    Analyzer.parse_page(res, '', '', '', elements, pages, route_to_parse, blacklist, l1, l2, auth, False, False)
    return pages.pop()


class MyTestClassificator(unittest.TestCase):

    def test_classification(self):
        to_check = {
            'http://google.com': PageLevel.PAGE_WITH_GET_QUERY,
            'https://myuncchart.org/MyChart/Authentication/Login?': PageLevel.PAGE_WITH_GENERAL_HTTP_METHOD_FORM,
            'https://www.york.ac.uk/teaching/cws/wws/webpage1.html': PageLevel.PLAIN_TEXT_PAGE
        }

        for url, page_type in to_check.items():
            self.assertEqual(get_page(url).type, page_type)

    def test_is_login(self):
        auth = ('username', 'password')

        login_urls = [
            'https://myuncchart.org/MyChart/Authentication/Login?',
            'https://myhealthatvanderbilt.com/Authentication/Login?',
            'https://dribbble.com/session/new?return_to=%2Ftags%2Flogin',
            'https://www.ssbjk.org.in/login.aspx'
        ]

        just_urls = [
            'https://google.com',
            'https://reddit.com',
            'https://ynet.co.il'
        ]

        for login_url in login_urls:
            res = requests.get(login_url)
            is_login, action, payloads = Classificator.is_login_page(res, auth)

            self.assertTrue(is_login)

        for login_url in just_urls:
            res = requests.get(login_url)
            is_login, action, payloads = Classificator.is_login_page(res, auth)

            self.assertFalse(is_login)


if __name__ == '__main__':
    unittest.main()
