import unittest
from time import sleep

from src.communicator.selenium_wrapper import SeleniumWrapper

BASE_URL = 'https://127.0.0.1:5000'
INDEX = '/'
SET_DEFAULT_COOKIE = '/set_default_cookie'
SET_COOKIE = '/set_cookie'
GET_COOKIE = '/get_cookie'
GOOD_COOKIE = '/good_cookie'
SET_INVALID_COOKIE = '/set_invalid_cookie'
ALERT_COOKIE = '/alert_cookie'
FORM_PAGE = '/form_page'
MANY_ALERTS = '/many_alerts'

WAIT_FOR = 10.1


class TestSeleniumWrapper(unittest.TestCase):
    def test_get(self):
        wrapper = SeleniumWrapper(BASE_URL, hidden=False)
        wrapper.get()
        self.assertEqual(wrapper.url, BASE_URL)

        wrapper.close_session()

    def test_post(self):
        pass

    def test_get_alert_text(self):
        pass

    def test_new_session(self):
        pass

    def test_close_session(self):
        pass

    def test_is_session_active(self):
        pass

    def test_refresh(self):
        wrapper = SeleniumWrapper(BASE_URL, hidden=False)

        wrapper.get(BASE_URL + SET_DEFAULT_COOKIE)
        self.assertTrue(wrapper.is_session_active())

        sleep(WAIT_FOR)
        wrapper.get(BASE_URL + INDEX)

        self.assertFalse(wrapper.is_session_active())
        wrapper.close_session()

    def test_get_element_by_id(self):
        pass

    def get_element_by_name(self):
        pass

    def test_url(self):
        wrapper = SeleniumWrapper(BASE_URL, hidden=False)

        wrapper.get(BASE_URL + INDEX)
        self.assertEqual(wrapper.url, BASE_URL + INDEX)

        wrapper.get(BASE_URL + SET_COOKIE)
        self.assertEqual(wrapper.url, BASE_URL + SET_COOKIE)

        wrapper.get(BASE_URL + GET_COOKIE)
        self.assertEqual(wrapper.url, BASE_URL + GET_COOKIE)

        wrapper.get(BASE_URL + GOOD_COOKIE)
        self.assertEqual(wrapper.url, BASE_URL + GOOD_COOKIE)

        wrapper.get(BASE_URL + SET_INVALID_COOKIE)
        self.assertEqual(wrapper.url, BASE_URL + SET_INVALID_COOKIE)

        wrapper.close_session()

    def test_cookies(self):
        pass


if __name__ == '__main__':
    unittest.main()


