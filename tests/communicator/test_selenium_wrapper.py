#! /usr/bin/python3

import unittest
from time import sleep

from src.communicator.selenium_wrapper import SeleniumWrapper
from selenium.common.exceptions import NoAlertPresentException


BASE_URL = 'http://127.0.0.1:5000'
INDEX = BASE_URL + '/'
SET_DEFAULT_COOKIE = BASE_URL + '/set_default_cookie'
SET_COOKIE = BASE_URL + '/set_cookie'
GET_COOKIE = BASE_URL + '/get_cookie'
GOOD_COOKIE = BASE_URL + '/good_cookie'
SET_INVALID_COOKIE = BASE_URL + '/set_invalid_cookie'
ALERT_COOKIE = BASE_URL + '/alert_cookie'
FORM_PAGE = BASE_URL + '/form_page'
MANY_ALERTS = BASE_URL + '/many_alerts'

WAIT_FOR = 10.1
COOKIE_NAME = 'Name'


class TestSeleniumWrapper(unittest.TestCase):
    def test_get(self):
        wrapper = SeleniumWrapper(hidden=False)

        wrapper.get(INDEX)
        self.assertEqual(wrapper.url, INDEX)

        wrapper.get(GOOD_COOKIE)
        self.assertRaises(NoAlertPresentException, wrapper.get_alert_text)

        wrapper.simple_get(ALERT_COOKIE, cookies={'name': COOKIE_NAME, 'value': 'COOKIE'})
        self.assertEqual(wrapper.get_alert_text(), 'COOKIE')

        wrapper.simple_get(MANY_ALERTS)
        self.assertEqual(wrapper.get_alert_text(), '1')

        wrapper.remove_alerts()

        self.assertRaises(NoAlertPresentException, wrapper.get_alert_text)

        wrapper.close_session()

    def test_post(self):
        pass

    def test_get_alert_text(self):
        pass

    def test_new_session(self):
        pass

    def test_close_session(self):
        pass

    def test_is_session_active(self):
        pass

    def test_refresh(self):
        wrapper = SeleniumWrapper(hidden=False)

        wrapper.get(SET_DEFAULT_COOKIE)
        self.assertTrue(wrapper.is_session_active())

        wrapper.get(INDEX)

        sleep(WAIT_FOR)

        self.assertFalse(wrapper.is_session_active())
        wrapper.close_session()

    def test_get_element_by_id(self):
        pass

    def test_get_element_by_name(self):
        pass

    def test_url(self):
        wrapper = SeleniumWrapper(hidden=False)

        wrapper.get(INDEX)
        self.assertEqual(wrapper.url, INDEX)

        wrapper.get(SET_COOKIE)
        self.assertEqual(wrapper.url, SET_COOKIE)

        wrapper.get(GET_COOKIE)
        self.assertEqual(wrapper.url, GET_COOKIE)

        wrapper.get(GOOD_COOKIE)
        self.assertEqual(wrapper.url, GOOD_COOKIE)

        wrapper.get(SET_INVALID_COOKIE)
        self.assertEqual(wrapper.url, SET_INVALID_COOKIE)

        wrapper.close_session()

    def test_cookies(self):
        pass


if __name__ == '__main__':
    unittest.main()
