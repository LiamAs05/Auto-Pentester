import requests


class RequestsWrapper:
    def __init__(self):
        self._IP = ""
        self._URL = ""
        self._cookies = dict()
        self._authentication_creds = list()
        self._session = requests.session()

    def get(self):
        """ performs an HTTP get requests
        """
        return self.session.get(self._URL)

    def add_header(self, header_to_add: str, header_value: str):
        """ adds header to HTTP request
        """
        self.session.headers[header_to_add] = header_value

    def remove_header(self, header_to_remove: str):
        """ removes header from HTTP request
        """
        self.session.headers.pop(header_to_remove)

    def add_cookie(self, name: str, value: str):
        self.cookies[name] = value

    def remove_cookie(self, name: str):
        self.cookies.pop(name)

    @property
    def cookies(self):
        return self._cookies

    @property
    def ip(self):
        return self._IP

    @property
    def url(self):
        return self._URL

    @property
    def authentication_creds(self):
        return self._authentication_creds

    @property
    def session(self):
        return self._session

    @cookies.setter
    def cookies(self, new_cookies: dict):
        self._cookies = new_cookies

    @ip.setter
    def ip(self, new_ip: str):
        self._IP = new_ip

    @url.setter
    def url(self, new_url: str):
        self._URL = new_url

    @authentication_creds.setter
    def authentication_creds(self, new_creds: list):
        self._authentication_creds = new_creds

    @session.setter
    def session(self, new_session: requests.Session):
        self._session = new_session
