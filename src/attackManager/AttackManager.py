from attacks import XSS, SQLI, CI, CSRF
from threading import Thread


class AttackManager:
    def __init__(self, path: str, attacks: list[str]):
        # todo change None to communicator

        self._current_path = path
        self._attacks_to_use = attacks


    def run(self):
        threads = []
        for attack in self.attacks_to_use:
            fn = self.__pentest_funcs[attack]
            t = Thread(target=fn)
            t.start()
            threads.append(t)

        for thread in threads:
            thread.join()

    @property
    def current_path(self) -> str:
        return self._current_path

    @current_path.setter
    def current_path(self, val: str) -> None:
        self._current_path = val

    @property
    def attacks_to_use(self) -> list[str]:
        return self._attacks_to_use

    @attacks_to_use.setter
    def attacks_to_use(self, val: list[str]) -> None:
        self._attacks_to_use = val
