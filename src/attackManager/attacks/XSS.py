#! /usr/bin/python3

from sys import stderr
from threading import Lock
from src.analyzer.page import Page
from src.attackManager.vulnerability import Vulnerability
from src.classificator.classificator import PageLevel

from src.attackManager.attacks.IPentester import IPentester


class XSS(IPentester):
    def attack(self, vulnerable_list: list[Vulnerability], list_lock: Lock) -> None:
        """
        This function is performs an XSS attack.
        @param vulnerable_list: The global list of vulnerabilities
        @param list_lock: list Mutex
        @return: None
        """
        payloads = self._db_manager.get_payloads("XSS", "We need to decide that")
        for route, page in self._website.get_pages().items():
            self._communicator.url = route
            if page.type != PageLevel.PLAIN_TEXT_PAGE:
                self.__inject(page, payloads)

    def __inject(self, page: Page, payloads: list[str]) -> None:
        for form in page.forms:
            for payload in payloads:
                pass
