#! /usr/bin/python3
from IDBManager import IDBManager
from os.path import dirname, realpath, join
import sqlite3


class SqliteDBManager(IDBManager):
    def __init__(self):
        self.__db_path = join(dirname(realpath(__file__)), "payloads.db")
        self.__con = None
        self.__cur = None

    def open_db(self) -> None:
        """
        Opens a database connection and inits the cursor
        @return: None
        """
        self.__con: sqlite3.Connection = sqlite3.connect(self.__db_path)
        self.__cur: sqlite3.Cursor = self.__con.cursor()

    def close_db(self) -> None:
        """
        Closes the current DB Connection
        @return: None
        """
        self.__con.close()

    def get_payloads(self, table: str, mode: str) -> list[str]:
        """
        Returns an attack payloads list
        @param table: table to query from
        @param mode: query mode
        @return: list of payloads
        @rtype: list[str]
        """
        res = self.__cur.execute(rf"SELECT payloads FROM ${table} WHERE mode == ${mode};    ")
        map(lambda x: x[0], res)
        return res
