#! /usr/bin/python3
from sys import argv, stderr
from src.managers.input_manager import InputManager
from src.communicator.communicator import Communicator, TIMEOUT
from src.managers.output_manager import OutputManager
from src.spider.spider import Spider, MAX_PAGES

NO_JSON_SUPPLIED = 1
JSON_INDEX = 1
MIN_ARGV_LENGTH = 1

def initialize_communicator(json: dict) -> Communicator:
    """
    Creating the communicator inside a function and returning for clarity purposes
    @param json: input json content
    @return: Communicator object
    """
    return Communicator(json["url"],
                        json.get("headers", None),
                        json.get("cookies", None),
                        json.get("auth", tuple()),
                        json.get("use_requests_interface", False),
                        json.get("hidden", True),
                        json.get("timeout", TIMEOUT))


def initialize_spider(json: dict) -> Spider:
    """
    Creating the communicator inside a function and returning for clarity purposes
    @param json: input json content
    @return: Communicator object
    """
    return Spider(json["url"],
                  json.get("blacklist", None),
                  json.get("cookies", None),
                  json.get("auth", tuple()),
                  json.get("max_pages", MAX_PAGES),
                  json.get("recursive", True))


def welcome_user() -> None:
    """
    This function prints a short introduction to the project and greets the user
    @return: None
    """
    print("Welcome!")


def main() -> None:
    # setting input file path to argv[1] if it exists
    json_path = argv[JSON_INDEX] if len(argv) > MIN_ARGV_LENGTH else ""

    if not InputManager.check_for_json(argv):  # skip if input file is good
        try:
            json_path = InputManager.create_json_file()  # if input file is invalid/not given, ask user to generate
        except KeyboardInterrupt as e:
            print(e, file=stderr)
        if not json_path:  # if user didn't generate a template file
            exit(NO_JSON_SUPPLIED)  # exit with error code 1

    json = InputManager.parse_input(json_path)

    spider = initialize_spider(json)
    spider.logic()  # spider's main function

    pages_found = spider.get_website().get_pages()

    try:
        OutputManager.extract_info(json_path, json["attacks"], json["url"], list(pages_found.keys()))
    except KeyboardInterrupt as e:
        print(e, file=stderr)


if __name__ == '__main__':
    main()
