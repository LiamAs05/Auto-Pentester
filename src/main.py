#! /usr/bin/python3
from sys import argv
from src.managers.input_manager import InputManager
from src.communicator.communicator import Communicator, TIMEOUT
from src.managers.output_manager import OutputManager
from src.spider.spider import Spider
from src.analyzer.analyzer import Analyzer

NO_JSON_SUPPLIED = 1


def initialize_communicator(json: dict) -> Communicator:
    """
    Creating the communicator inside a function and returning for clarity purposes
    @param json: input json content
    @return: Communicator object
    """
    return Communicator(json["url"],
                        json.get("headers", None),
                        json.get("cookies", None),
                        json.get("auth", tuple()),
                        json.get("use_requests_interface", False),
                        json.get("hidden", True),
                        json.get("timeout", TIMEOUT))


def welcome_user() -> None:
    """
    This function prints a short introduction to the project and greets the user
    @return: None
    """
    print("Welcome!")


def main():
    json_path = argv[1] if len(argv) > 1 else ""    # setting input file path to argv[1] if it exists

    if not InputManager.check_for_json(argv):   # skip if input file is good
        json_path = InputManager.generate_json()    # if input file is invalid/not given, ask user to generate
        if not json_path:   # if user didn't generate a template file
            exit(NO_JSON_SUPPLIED)  # exit with error code 1

    json = InputManager.parse_input(json_path)  # parse the input json file
    # communicator = initialize_communicator(json)    # create communicator object with the parsed json

    # todo add blacklist, cookies, auth, max_pages, recursive

    spider = Spider(json["url"], set(), json["cookies"], json["auth"])
    spider.logic()
    pages = spider.get_website().get_pages()
    print(pages.pop("http://hello.world"))
    # analyzer = Analyzer()

    # welcome_user()
    # todo add attack manager

    OutputManager.extract_info(json_path, json["attacks"], json["url"]) # , pages


if __name__ == '__main__':
    main()
