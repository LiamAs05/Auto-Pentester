#! /usr/bin/python3
from sys import argv
from src.managers.input_manager import InputManager
from src.communicator.communicator import Communicator, TIMEOUT

NO_JSON_SUPPLIED = 1


def initialize_communicator(json: dict) -> Communicator:
    """
    Creating the communicator inside a function and returning for clarity purposes
    @param json: input json content
    @return: Communicator object
    """
    return Communicator(json["url"],
                        json.get("headers", None),
                        json.get("cookies", None),
                        json.get("auth", tuple()),
                        json.get("use_requests_interface", False),
                        json.get("hidden", True),
                        json.get("timeout", TIMEOUT))


def welcome_user() -> None:
    """
    This function prints a short introduction to the project and greets the user
    @return: None
    """
    print("Welcome!")


def main():
    json_path = argv[1] if len(argv) > 1 else ""
    if not InputManager.check_for_json(argv):
        json_path = InputManager.generate_json()
        if not json_path:
            exit(NO_JSON_SUPPLIED)

    json = InputManager.parse_input(json_path)
    communicator = initialize_communicator(json)

    welcome_user()
    # todo add attack manager


if __name__ == '__main__':
    main()
