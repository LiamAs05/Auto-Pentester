#! /usr/bin/python3

from src.analyzer.page import Page
from typing import Union


class Website:

    def __init__(self, base_url: str, cookies: dict = None):
        self._base_url = base_url
        self._cookies = cookies
        self.pages = dict()

    def add_page(self, page: Page) -> None:
        self.pages[page.route] = page

    def get_pages(self) -> dict[str, Page]:
        return self.pages.copy()

    def get_page(self, route: str) -> Union[Page, None]:
        return self.pages.get(route, None)

    def set_page(self, route: str, page: Page) -> None:
        self.pages[route] = page

    def does_page_exist(self, route: str) -> bool:
        return bool(self.pages.get(route, False))

    def remove_page(self, route: str) -> None:
        self.pages.pop(route, None)

    def __str__(self) -> str:
        return f"""
[*] BASE_URL: {self.base_url}
[*] COOKIES: {self.cookies}
"""

    @property
    def base_url(self) -> str:
        return self._base_url

    @property
    def cookies(self) -> dict:
        return self._cookies

    @cookies.setter
    def cookies(self, value) -> None:
        self._cookies = value

    @base_url.setter
    def base_url(self, value: str) -> None:
        self._base_url = value
