#! /usr/bin/python3
from src.analyzer.webElements.input import Element


class Form:
    def __init__(self):
        self._attributes = dict()
        self._inputs = set()

    def add_input(self, value: Element) -> None:
        self._inputs.add(value)

    def remove_input(self, value: Element) -> None:
        try:
            self._inputs.remove(value)
        except KeyError:
            pass

    def to_json(self):
        return self.get_element_attributes()

    @staticmethod
    def get_element_name() -> str:
        return "form"

    @staticmethod
    def get_element_attributes() -> dict[str, str]:
        return {
            "name": "",
            "id": "",
            "class": "",
            "action": "",
            "enctype": "",
            "method": "GET",
            "rel": "",
            "target": ""
        }

    @property
    def attributes(self) -> dict:
        return self._attributes

    @attributes.setter
    def attributes(self, value) -> None:
        self._attributes = value

    @property
    def inputs(self) -> set:
        return self._inputs

    @inputs.setter
    def inputs(self, value: set) -> None:
        self._inputs = value

    def get_name(self):
        return self.attributes["name"]

    def get_id(self):
        return self.attributes["id"]

    def get_class(self):
        return self.attributes["class"]

    def get_action(self):
        return self.attributes["action"]

    def get_enctype(self):
        return self.attributes["enctype"]

    def get_method(self):
        return self.attributes["method"]

    def get_rel(self):
        return self.attributes["rel"]

    def get_target(self):
        return self.attributes["target"]
